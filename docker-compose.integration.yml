version: '3.8'

services:
  # PostgreSQL database in "private" network (simulates RDS in private subnet)
  postgres-private:
    image: postgres:15
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
    volumes:
      - ./tests/integration/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - private-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Simple SSH bastion using ubuntu with SSH server
  ssh-bastion:
    image: ubuntu:22.04
    command: >
      bash -c "
        apt-get update && 
        apt-get install -y openssh-server postgresql-client netcat-openbsd &&
        mkdir -p /var/run/sshd &&
        echo 'bastionuser:bastionpass' | chpasswd &&
        useradd -m -s /bin/bash bastionuser &&
        echo 'bastionuser:bastionpass' | chpasswd &&
        echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config &&
        echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config &&
        echo 'PubkeyAuthentication yes' >> /etc/ssh/sshd_config &&
        echo 'AllowTcpForwarding yes' >> /etc/ssh/sshd_config &&
        echo 'GatewayPorts yes' >> /etc/ssh/sshd_config &&
        service ssh start &&
        tail -f /dev/null
      "
    ports:
      - "2222:22"  # SSH port exposed to host
    networks:
      - public-network
      - private-network  # Bastion can access both networks
    depends_on:
      postgres-private:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "pgrep", "sshd"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Test runner container
  test-runner:
    build:
      context: .
      dockerfile: tests/integration/Dockerfile.test
    volumes:
      - .:/app
    networks:
      - public-network  # Can only access bastion, not postgres directly
    depends_on:
      ssh-bastion:
        condition: service_healthy
      postgres-private:
        condition: service_healthy
    environment:
      - SSH_HOST=ssh-bastion
      - SSH_PORT=22
      - SSH_USER=bastionuser
      - SSH_PASSWORD=bastionpass
      - POSTGRES_HOST=postgres-private
      - POSTGRES_PORT=5432
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_DB=testdb

networks:
  public-network:
    driver: bridge
  private-network:
    driver: bridge
    internal: true  # No external access - only accessible via bastion